
# Generated by Django 5.1.3 on 2025-01-15 01:06


import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[

                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("full_name", models.CharField(max_length=50)),
                ("date_of_birth", models.DateField()),
                ("gender", models.BooleanField(default=0)),
                ("id_card", models.CharField(max_length=12, unique=True)),
                ("phone_number", models.CharField(max_length=12, unique=True)),
                ("address", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "image",
                    models.ImageField(
                        default="employee_images/default.png",
                        upload_to="employee_images/",
                    ),
                ),
                ("is_active", models.BooleanField(default=1)),
                ("citizen_id", models.CharField(max_length=13, unique=True)),

            ],
            options={
                "db_table": "employee",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("doctor", "Doctor"),
                            ("pharmacist", "Pharmacist"),
                            ("admin", "Admin"),
                            ("staff", "Staff"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "employee",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account",
                        to="accounts.employee",
                    ),
                ),
            ],
            options={
                "db_table": "account",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
